!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AnkiCard	scripts/extract_korean_japanese_from_pdf.py	/^class AnkiCard:$/;"	c
ExitStack	scripts/extract_korean_japanese_from_pdf.py	/^from contextlib import ExitStack$/;"	i
List	scripts/extract_korean_japanese_from_pdf.py	/^from typing import List$/;"	i
Path	scripts/extract_korean_japanese_from_pdf.py	/^from pathlib import Path$/;"	i
PyMuPDF	scripts/extract_korean_japanese_from_pdf.py	/^import fitz  # PyMuPDF (https:\/\/pypi.org\/project\/PyMuPDF\/)$/;"	i
awslocal_sqs_send_message	scripts/.functions.sh	/^awslocal_sqs_send_message() {$/;"	f
blockLines	scripts/extract_korean_japanese_from_pdf.py	/^            blockLines = block["lines"] if (block and block["lines"]) else None$/;"	v
bw_command	scripts/bitwarden.sh	/^bw_command() {$/;"	f
bw_list_notes	scripts/bitwarden.sh	/^bw_list_notes() {$/;"	f
bw_login	scripts/bitwarden.sh	/^bw_login() {$/;"	f
bw_logout	scripts/bitwarden.sh	/^bw_logout() {$/;"	f
bw_mount_to_local	scripts/bitwarden.sh	/^bw_mount_to_local() {$/;"	f
bw_mount_to_local_pg_service	scripts/bitwarden.sh	/^bw_mount_to_local_pg_service() {$/;"	f
bw_sync	scripts/bitwarden.sh	/^bw_sync() {$/;"	f
cal	scripts/.functions.sh	/^function cal() {$/;"	f
chain	scripts/extract_korean_japanese_from_pdf.py	/^            from itertools import chain$/;"	i
checkdeps	scripts/migrate_utils.sh	/^checkdeps() {$/;"	f
cleanupds	scripts/.functions.sh	/^function cleanupds() {$/;"	f
codepoint	scripts/.functions.sh	/^function codepoint() {$/;"	f
convert_japanese_word	scripts/extract_korean_japanese_from_pdf.py	/^def convert_japanese_word(rawTxt):$/;"	f
copyssh	scripts/.functions.sh	/^function copyssh() {$/;"	f
create_sudo_symlinks	scripts/symlinks_config.sh	/^create_sudo_symlinks() {$/;"	f
create_symlinks	scripts/symlinks_config.sh	/^create_symlinks() {$/;"	f
csv	scripts/extract_korean_japanese_from_pdf.py	/^import csv$/;"	i
csv_doc	scripts/extract_korean_japanese_from_pdf.py	/^    csv_doc = stack.enter_context(open(output_csv_doc_path, "w"))$/;"	v
currAnkiCard	scripts/extract_korean_japanese_from_pdf.py	/^            currAnkiCard = AnkiCard(korean=flattened_span_texts[1], japanese=convert_japanese_word(flattened_span_texts[3]))$/;"	v
dataclass	scripts/extract_korean_japanese_from_pdf.py	/^from dataclasses import dataclass$/;"	i
dataurl	scripts/.functions.sh	/^function dataurl() {$/;"	f
db_clone	scripts/database_switcher.sh	/^db_clone() {$/;"	f
db_dump	scripts/database_switcher.sh	/^db_dump() {$/;"	f
db_restore	scripts/database_switcher.sh	/^db_restore() {$/;"	f
db_source_pick	scripts/database_switcher.sh	/^db_source_pick() {$/;"	f
dbash	scripts/.functions.sh	/^dbash() {$/;"	f
dip	scripts/.functions.sh	/^function dip() {$/;"	f
dlogs	scripts/.functions.sh	/^dlogs() {$/;"	f
doc_name	scripts/extract_korean_japanese_from_pdf.py	/^doc_name = 'japanese-korean-chinese-common-words'$/;"	v
dprune	scripts/.functions.sh	/^dprune() {$/;"	f
dps	scripts/.functions.sh	/^dps() {$/;"	f
dreset	scripts/.functions.sh	/^dreset() {$/;"	f
drm	scripts/.functions.sh	/^drm() {$/;"	f
drmi	scripts/.functions.sh	/^drmi() {$/;"	f
drun	scripts/.functions.sh	/^drun() {$/;"	f
drund	scripts/.functions.sh	/^drund() {$/;"	f
dsm	scripts/.functions.sh	/^dsm() {$/;"	f
dump_file_name	scripts/database_switcher.sh	/^dump_file_name() {$/;"	f
dvrm	scripts/.functions.sh	/^dvrm() {$/;"	f
escape	scripts/.functions.sh	/^function escape() {$/;"	f
evil-normal-state-map	.doom.d/config.el	/^(define-key evil-normal-state-map (kbd "+" ) 'er\/expand-region)$/;"	f
evil-normal-state-map	.doom.d/config.el	/^(define-key evil-normal-state-map (kbd "C-p") 'evil-jump-forward)$/;"	f
extract	scripts/.functions.sh	/^extract() {$/;"	f
fitz	scripts/extract_korean_japanese_from_pdf.py	/^import fitz  # PyMuPDF (https:\/\/pypi.org\/project\/PyMuPDF\/)$/;"	i
flakify	scripts/nix_helpers.sh	/^flakify() {$/;"	f
flattened_span_texts	scripts/extract_korean_japanese_from_pdf.py	/^                flattened_span_texts = flattened_span_texts[:2] + [flattened_span_texts[2] + flattened_span_texts[3]] + flattened_span_texts[4:]$/;"	v
flattened_span_texts	scripts/extract_korean_japanese_from_pdf.py	/^            flattened_span_texts = [s["text"] for s in flattened_spans]$/;"	v
flattened_spans	scripts/extract_korean_japanese_from_pdf.py	/^            flattened_spans = list(chain.from_iterable([b["spans"] for b in blockLines]))$/;"	v
gb	scripts/.functions.sh	/^gb() {$/;"	f
gba	scripts/.functions.sh	/^gba() {$/;"	f
get_user_shell	scripts/.functions.sh	/^function get_user_shell() {$/;"	f
gf	scripts/.functions.sh	/^gf() {$/;"	f
gh_org_repos_sync	scripts/github_helpers.sh	/^gh_org_repos_sync() {$/;"	f
git_curr_branch	scripts/.functions.sh	/^git_curr_branch() {$/;"	f
git_curr_url	scripts/.functions.sh	/^git_curr_url() {$/;"	f
gl	scripts/.functions.sh	/^gl() {$/;"	f
gr	scripts/.functions.sh	/^gr() {$/;"	f
grep_vscode_sqlite	scripts/.functions.sh	/^grep_vscode_sqlite() {$/;"	f
gsh	scripts/.functions.sh	/^gsh() {$/;"	f
gt	scripts/.functions.sh	/^gt() {$/;"	f
hl	scripts/.functions.sh	/^function hl() {$/;"	f
https	scripts/extract_korean_japanese_from_pdf.py	/^import fitz  # PyMuPDF (https:\/\/pypi.org\/project\/PyMuPDF\/)$/;"	i
input_pdf_doc_path	scripts/extract_korean_japanese_from_pdf.py	/^input_pdf_doc_path = Path().home() \/ 'Library' \/ 'CloudStorage' \/ 'Dropbox' \/ 'japanese' \/ f'{doc_name}.pdf'$/;"	v
instant_prompt_example	.p10k.zsh	/^  function instant_prompt_example() {$/;"	f
isNonDataRow	scripts/extract_korean_japanese_from_pdf.py	/^def isNonDataRow(blockLines):$/;"	f
is_git_directory	scripts/.functions.sh	/^function is_git_directory() {$/;"	f
is_in_git_repo	scripts/.functions.sh	/^is_in_git_repo() {$/;"	f
kks	scripts/extract_korean_japanese_from_pdf.py	/^kks = pykakasi.kakasi()$/;"	v
link	scripts/.functions.sh	/^link() {$/;"	f
list_pg_profiles	scripts/database_switcher.sh	/^list_pg_profiles() {$/;"	f
list_pg_profiles_localhost	scripts/database_switcher.sh	/^list_pg_profiles_localhost() {$/;"	f
lt	scripts/.functions.sh	/^function lt() {$/;"	f
manpdf	scripts/.functions.sh	/^function manpdf() {$/;"	f
mkd	scripts/.functions.sh	/^function mkd() {$/;"	f
my_git_formatter	.p10k.zsh	/^  function my_git_formatter() {$/;"	f
myip	scripts/.functions.sh	/^function myip() {$/;"	f
nix_clean	scripts/nix_helpers.sh	/^nix_clean() {$/;"	f
nix_home_manager_install	scripts/nix_helpers.sh	/^nix_home_manager_install() {$/;"	f
nix_init	scripts/nix_helpers.sh	/^nix_init() {$/;"	f
nix_install_latest_ver	scripts/nix_helpers.sh	/^nix_install_latest_ver() {$/;"	f
nix_install_pinned_ver	scripts/nix_helpers.sh	/^nix_install_pinned_ver() {$/;"	f
nix_upgrade	scripts/nix_helpers.sh	/^nix_upgrade() {$/;"	f
nixify	scripts/nix_helpers.sh	/^nixify() {$/;"	f
o	scripts/.functions.sh	/^function o() {$/;"	f
org	scripts/extract_korean_japanese_from_pdf.py	/^import fitz  # PyMuPDF (https:\/\/pypi.org\/project\/PyMuPDF\/)$/;"	i
output_csv_doc_path	scripts/extract_korean_japanese_from_pdf.py	/^output_csv_doc_path = Path().home() \/ 'Downloads' \/ f'{doc_name}.csv'$/;"	v
page	scripts/extract_korean_japanese_from_pdf.py	/^        page = pdf_doc.load_page(page_num)$/;"	v
page_text_dict	scripts/extract_korean_japanese_from_pdf.py	/^        page_text_dict = page.get_text("dict")$/;"	v
pathadd	scripts/.path.sh	/^pathadd() {$/;"	f
pdf_doc	scripts/extract_korean_japanese_from_pdf.py	/^    pdf_doc = stack.enter_context(fitz.open(input_pdf_doc_path))$/;"	v
peek	scripts/.functions.sh	/^peek() {$/;"	f
perform_pg_dump	scripts/database_switcher.sh	/^perform_pg_dump() {$/;"	f
perform_pg_restore	scripts/database_switcher.sh	/^perform_pg_restore() {$/;"	f
project	scripts/extract_korean_japanese_from_pdf.py	/^import fitz  # PyMuPDF (https:\/\/pypi.org\/project\/PyMuPDF\/)$/;"	i
prompt_example	.p10k.zsh	/^  function prompt_example() {$/;"	f
pykakasi	scripts/extract_korean_japanese_from_pdf.py	/^import pykakasi$/;"	i
pypi	scripts/extract_korean_japanese_from_pdf.py	/^import fitz  # PyMuPDF (https:\/\/pypi.org\/project\/PyMuPDF\/)$/;"	i
refresh	scripts/.functions.sh	/^function refresh() {$/;"	f
reloadcli	scripts/.functions.sh	/^function reloadcli() {$/;"	f
reloaddns	scripts/.functions.sh	/^function reloaddns() {$/;"	f
remove-electric-indent-mode	.doom.d/config.el	/^(defun remove-electric-indent-mode ()$/;"	f
ripgrep_fzf_search_file	scripts/.functions.sh	/^ripgrep_fzf_search_file() {$/;"	f
run_git_sub_command_in_git_subdirs	scripts/.functions.sh	/^function run_git_sub_command_in_git_subdirs() {$/;"	f
run_with_deps	scripts/migrate_utils.sh	/^run_with_deps() {$/;"	f
s	scripts/.functions.sh	/^function s() {$/;"	f
set_user_shell	scripts/.functions.sh	/^function set_user_shell() {$/;"	f
show_paths	scripts/.functions.sh	/^function show_paths() {$/;"	f
sudo_link	scripts/.functions.sh	/^sudo_link() {$/;"	f
tre	scripts/.functions.sh	/^function tre() {$/;"	f
unidecode	scripts/.functions.sh	/^function unidecode() {$/;"	f
usage	scripts/migrate_utils.sh	/^usage() {$/;"	f
version	scripts/.functions.sh	/^function version() {$/;"	f
writer	scripts/extract_korean_japanese_from_pdf.py	/^        writer = csv.writer(csv_doc)$/;"	v
